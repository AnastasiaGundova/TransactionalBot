import telebot
from config import currencies, TOKEN
from extensions import APIException, CryptoConverter

bot = telebot.TeleBot(TOKEN)

LANGUAGE = "russian"


@bot.message_handler(commands=["russian"])
def to_russian(message: telebot.types.Message):
    global LANGUAGE
    LANGUAGE = "russian"
    text = "–Ø–∑—ã–∫ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π"
    bot.reply_to(message, text)


@bot.message_handler(commands=["english"])
def to_english(message: telebot.types.Message):
    global LANGUAGE
    LANGUAGE = "english"
    text = "Language was changed to english"
    bot.reply_to(message, text)


def is_russian():
    return LANGUAGE == "russian"


def handle_start_text(LANGUAGE, user_full_name):
    if LANGUAGE == "russian":
        return f"""–ü—Ä–∏–≤–µ—Ç {user_full_name} üëã! –ú–æ—ë –∏–º—è TransactionalBot ü§ñ
–Ø –ø–æ–º–æ–≥—É —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã (–µ–≤—Ä–æ, –¥–æ–ª–ª–∞—Ä –∏–ª–∏ —Ä—É–±–ª—å).

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:
<–ò–º—è –≤–∞–ª—é—Ç—ã, —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å> <–í –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> <–ß–∏—Å–ª–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã>

üìú –ö–æ–º–∞–Ω–¥—ã:

1Ô∏è‚É£ /start –∏–ª–∏ /help - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.
2Ô∏è‚É£ /values - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö.
3Ô∏è‚É£ /english - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —è–∑—ã–∫ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π.
4Ô∏è‚É£ /russian - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —è–∑—ã–∫ –Ω–∞ —Ä—É—Å—Å–∫–∏–π."""

    if LANGUAGE == "english":
        return f"""Hello {user_full_name} üëã! My name is TransactionalBot ü§ñ
I will help you find out the price for a certain amount of currency (euro, dollar or ruble).

To start interacting with the bot, enter the command in the specified format:
<Name of the currency you want to know the price of> <Which currency to convert to> <Number of currency to be transferred>

üìú Commands:

1Ô∏è‚É£ /start or /help - get instructions.
2Ô∏è‚É£ /values - information about all available currencies.
3Ô∏è‚É£ /english - switch the language to English.
4Ô∏è‚É£ /russian - switch the language to Russian."""


@bot.message_handler(commands=["start", "help"])
def instruction(message: telebot.types.Message):
    user_full_name = message.from_user.full_name
    bot.reply_to(message, handle_start_text(LANGUAGE, user_full_name))


@bot.message_handler(commands=["values"])
def values(message: telebot.types.Message):
    title = "   üí∏ –ü–µ—Ä–µ—á–µ–Ω—å –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç üí∏ \n" if is_russian() else "      üí∏ List of available currencies\
üí∏ \n"
    text = ("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n"
            f"{title}"
            "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò")
    for key in currencies.keys():
        text = '\n'.join((text, "‚Ä¢  " + key,))
    bot.reply_to(message, text)


@bot.message_handler(content_types=['text', ])
def convert(message: telebot.types.Message):
    try:
        value = message.text.split(' ')  # –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –ø—Ä–æ–±–µ–ª–∞–º–∏

        if len(value) != 3:
            raise APIException("–ù–µ –≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤" if is_russian() else "Incorrect number of\
parameters")
        quote, base, amount = value
        total_base = CryptoConverter.get_price(quote, base, amount, LANGUAGE)
        total_base = total_base * int(amount)
    except APIException as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{e}" if is_russian() else f"User error\n{e}")

    except Exception as e:
        bot.reply_to(message, f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}" if is_russian() else f"Failed to process the \
command\n{e}")
    else:
        text = f"–¶–µ–Ω–∞ {amount} {quote} –≤ {base} - {total_base}"
        bot.send_message(message.chat.id, text)


bot.polling()
